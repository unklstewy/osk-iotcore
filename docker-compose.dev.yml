version: '3.8'

services:
  # Development environment
  dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
      target: development
    volumes:
      - .:/app
      - go-cache:/go/pkg/mod
      - build-cache:/root/.cache/go-build
    working_dir: /app
    ports:
      - "8080:8080"
      - "8443:8443"
      - "9090:9090"
      - "40000:40000"  # Delve debugging port
    environment:
      - GO111MODULE=on
      - CGO_ENABLED=1
      - GOPROXY=https://proxy.golang.org,direct
      - GOSUMDB=sum.golang.org
    stdin_open: true
    tty: true
    command: bash
    networks:
      - dev-network

  # Test runner
  test:
    build:
      context: .
      dockerfile: Dockerfile.dev
      target: testing
    volumes:
      - .:/app
      - go-cache:/go/pkg/mod
      - build-cache:/root/.cache/go-build
    working_dir: /app
    environment:
      - GO111MODULE=on
      - CGO_ENABLED=1
    profiles:
      - test
    networks:
      - dev-network

  # Linter
  lint:
    build:
      context: .
      dockerfile: Dockerfile.dev
      target: linting
    volumes:
      - .:/app
      - go-cache:/go/pkg/mod
      - build-cache:/root/.cache/go-build
    working_dir: /app
    environment:
      - GO111MODULE=on
      - CGO_ENABLED=1
    profiles:
      - lint
    networks:
      - dev-network

  # Builder
  builder:
    build:
      context: .
      dockerfile: Dockerfile.dev
      target: builder
    volumes:
      - .:/app
      - go-cache:/go/pkg/mod
      - build-cache:/root/.cache/go-build
    working_dir: /app
    environment:
      - GO111MODULE=on
      - CGO_ENABLED=1
    profiles:
      - build
    networks:
      - dev-network

networks:
  dev-network:
    driver: bridge

volumes:
  go-cache:
  build-cache:
